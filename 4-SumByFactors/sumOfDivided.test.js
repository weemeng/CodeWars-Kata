const sumOfDivided = require("./sumOfDivided");

describe("sumOfDivided", () => {
  it("should return [] when []", () => {
    expect(sumOfDivided([])).toEqual([]);
  });
  it("should return [[2, 12], [3, 27], [5, 15]] when [12, 15]", () => {
    expect(sumOfDivided([12, 15])).toEqual([
      [2, 12],
      [3, 27],
      [5, 15]
    ]);
  });
  it("should return [ [2, 54], [3, 135], [5, 90], [7, 21] ] when [15,21,24,30,45]", () => {
    expect(sumOfDivided([15, 21, 24, 30, 45])).toEqual([
      [2, 54],
      [3, 135],
      [5, 90],
      [7, 21]
    ]);
  });
  it("should return [[2, 54], [3, 45], [5, 0], [7, 21]] when [ 15, 21, 24, 30, -45 ]", () => {
    expect(sumOfDivided([15, 21, 24, 30, -45])).toEqual([
      [2, 54],
      [3, 45],
      [5, 0],
      [7, 21]
    ]);
  });
  it(`should return [ [ 2, -61548 ],
  [ 3, -4209 ],
  [ 5, -28265 ],
  [ 23, -4209 ],
  [ 31, -31744 ],
  [ 53, -72769 ],
  [ 61, -4209 ],
  [ 1373, -72769 ],
  [ 5653, -28265 ],
  [ 7451, -29804 ] ] when [ -29804, -4209, -28265, -72769, -31744 ]`, () => {
    expect(sumOfDivided([-29804, -4209, -28265, -72769, -31744])).toEqual([
      [2, -61548],
      [3, -4209],
      [5, -28265],
      [23, -4209],
      [31, -31744],
      [53, -72769],
      [61, -4209],
      [1373, -72769],
      [5653, -28265],
      [7451, -29804]
    ]);
  });
  it(`should return [ [ 2, 254 ],
  [ 3, -63 ],
  [ 5, -45 ],
  [ 11, 363 ],
  [ 13, -65 ],
  [ 17, 187 ],
  [ 19, -19 ],
  [ 29, 145 ],
  [ 31, 62 ],
  [ 59, 118 ],
  [ 71, -71 ],
  [ 89, 89 ],
  [ 199, 199 ] ] when [ 199, -4, 118, -45, -18, 62, 89, 176, 145, -80, 187, -65, -71, -19 ]`, () => {
    expect(
      sumOfDivided([
        199,
        -4,
        118,
        -45,
        -18,
        62,
        89,
        176,
        145,
        -80,
        187,
        -65,
        -71,
        -19
      ])
    ).toEqual([
      [2, 254],
      [3, -63],
      [5, -45],
      [11, 363],
      [13, -65],
      [17, 187],
      [19, -19],
      [29, 145],
      [31, 62],
      [59, 118],
      [71, -71],
      [89, 89],
      [199, 199]
    ]);
  });
});
